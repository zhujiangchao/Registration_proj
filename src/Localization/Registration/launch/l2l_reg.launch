<launch>
    <arg name="drone_id" value="0"/>
    <arg name="rviz" default="true"/>
    <arg name="drone_num" default="2"/>

    <node name="drone_$(arg drone_id)_l2l_registration_node" pkg="registration" type="lidar2lidar_registration_node" output="screen" >
        <!-- rostpic remap -->
        <remap from="~Odometry_old" to="/Odometry"/>
        <remap from="~cloud_old" to="/cloud_registered"/>
        <remap from="~Odometry_new" to="/drone_$(arg drone_id)_Odometry_new"/>
        <remap from="~cloud_new" to="/cloud_registered_new"/>
        <remap from="~my_map" to="/cloud_pcd"/>

        <param name="drone_id" value="$(arg drone_id)"/>

        <!-- full map point clouds params -->
        <rosparam param="map_size">[-50, 50, -50, 50, -1, 20]</rosparam>
        <param name="is_use_pcd"    value="true"/>
        <param name="other_map_fn"   value="/home/zuzu/Documents/BAG/FY_Project/Gym_line/drone_0.pcd"/>        
        <param name="resolution"    value="0.1"/>
        <param name="radiusfilter_radius"    value="0.15"/>
        <param name="radiusfilter_neibors"    value="5"/>

        <!-- registration params -->
        <param name="reg_pattern" value="pclGICP"/>
        <rosparam param="init_guess">[0,0,0,0,0,0]</rosparam>
        <param name="reg_iter"  value="100"/>
        <param name="trans_eps" value="1e-2"/>
        <param name="fitness_eps" value="1e-2"/>
        <param name="max_cor_dis" value="5"/>        
        <param name="ransac_iter" value="20"/>        
        <param name="neibor_k" value="50"/>
        <param name="ndt_resolution" value="0.5"/>
        <param name="ndt_stepsize" value="0.8"/>

        <!-- workflow vars -->
        <param name="trigger_time" value="20"/>

    </node>

<!--     <include file="$(find swarm_bridge)/launch/bridge_tcp_drone.launch">
        <arg name="drone_id"    value="$(arg drone_id)"/>
        <arg name="drone_num"   value="$(arg drone_num)"/>
    </include> -->

<!-- 
    <include file="$(find fast_lio)/launch/mapping_with_driver.launch">
        <arg name="drone_id"    value="$(arg drone_id)"/>
    </include> -->

	<group if="$(arg rviz)">
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find registration)/config/l2l.rviz" required="true"/>
	</group>
  
  </launch>
  
